import tensorflow as tf
from marco_dataset import Marco_dataset
from load_glove import Load_glove
from hyperparameters import Hyperparameters as hp
from bert import Bert_server
import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'

'''
vocab = Load_glove(hp.glove_path)
marco_train = Marco_dataset(hp.marco_dev_path, vocab)
bert_server = Bert_server()
'''

H = tf.placeholder(dtype=tf.float32, shape=[None, hp.max_seq_length, hp.bert_embedding_size])
s = tf.placeholder(dtype=tf.float32, shape=[None, hp.max_seq_length, hp.bert_embedding_size])

wh = tf.Variable(tf.random_normal(shape=[hp.bert_embedding_size, hp.attention_inter_size]), dtype=tf.float32)
ws = tf.Variable(tf.random_normal(shape=[hp.bert_embedding_size, hp.attention_inter_size]), dtype=tf.float32)
batten = tf.Variable(tf.constant(0.1, shape=[hp.attention_inter_size]))
v = tf.Variable(tf.random_normal(shape=[hp.attention_inter_size, 1]))

